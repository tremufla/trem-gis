name: Deployment
run-name: üöÄ Deployment
on:
  push:
    branches: [ "main" ]
env:
  REGISTRY: docker.io
  ACCOUNT: ${{ secrets.DOCKER_HUB_USER_NAME }}
  IMAGE_NAME: trem-giz
jobs:
  test:
    name: üß™ Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies
        run: npm ci --force

      - name: Test and coverage
        run: npm run test:coverage

      - name: Archive coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

  build-and-push:
    name: üèóÔ∏è Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.ACCOUNT }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}, ${{ env.REGISTRY }}/${{ env.ACCOUNT }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-kubernetes:
    name: üõ´ Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v3
        with:
          repository: cesarapires/gitops-projects
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize_version: v3.6.1

      - name: Update Kubernetes
        run: |
          cd ${{ env.IMAGE_NAME }}/kubernetes
          kustomize edit set image ${{ env.IMAGE_NAME }}-api=${{ env.ACCOUNT }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cat kustomization.yaml

      - name: Commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Deploy Action"
          git commit -am "chore: bump image tag"

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: tremufla/trem-infra
          branch: main
  # sonarqube:
  #   name: üõ∞Ô∏è SonarQube
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #   - uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #   - name: Download coverage report
  #     uses: actions/download-artifact@v2
  #     with:
  #       name: coverage-report
  #       path: coverage
  #   - name: SonarQube Scan
  #     uses: sonarsource/sonarqube-scan-action@master
  #     env:
  #       SONAR_TOKEN: ${{ secrets.SONAR_GITHUB_ACTIONS_TOKEN }}
  #       SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}